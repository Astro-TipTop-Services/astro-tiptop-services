"use strict";(self.webpackChunktiptop_site=self.webpackChunktiptop_site||[]).push([[7372],{5978:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"orion/howtosetuplaunchfile","title":"How to set up a launch script for TipTop?","description":"As explained in the Quickstart section, to run a simulation with TipTop, you need:","source":"@site/docs/orion/howtosetuplaunchfile.mdx","sourceDirName":"orion","slug":"/orion/howtosetuplaunchfile","permalink":"/astro-tiptop-services/docs/orion/howtosetuplaunchfile","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"howtosetuplaunchfile","title":"How to set up a launch script for TipTop?","sidebar_label":"How to set up a launch script for TipTop?"},"sidebar":"tipTopSidebar","previous":{"title":"Quickstart","permalink":"/astro-tiptop-services/docs/orion/usage"},"next":{"title":"How to set up TipTop according to the AO mode?","permalink":"/astro-tiptop-services/docs/orion/howtosetup"}}');var i=t(4848),o=t(8453);const r={id:"howtosetuplaunchfile",title:"How to set up a launch script for TipTop?",sidebar_label:"How to set up a launch script for TipTop?"},l=void 0,a={},h=[];function c(e){const n={a:"a",code:"code",em:"em",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["As explained in the ",(0,i.jsx)(n.a,{href:"/astro-tiptop-services/docs/orion/usage",children:"Quickstart"})," section, to run a simulation with TipTop, you need:"]}),"\n",(0,i.jsx)(n.p,{children:"a launch script which:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Loads the simulation parameters from a .ini file (e.g., minimalPar.ini)"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Initializes the necessary modules"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Starts the simulation"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The simplest file to launch a simulation is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from tiptop.tiptop import *\r\n\r\noverallSimulation(\"./\", \"minimalPar\", './', 'test')\n"})}),"\n",(0,i.jsx)(n.p,{children:"where:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The first and second arguments of the overallSimulation function correspond, respectively, to the path of the folder containing the .ini input file, and the name of that .ini file."}),"\n",(0,i.jsx)(n.li,{children:"The third and fourth arguments specify where to save the output results (in .fits format) and what name to give to the resulting .fits file."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["However, the tiptop.",(0,i.jsx)(n.strong,{children:"overallSimulation"}),", which runs the entire TipTop simulation based on the input file, can also take additional arguments that allow enabling or disabling certain features and selecting the desired outputs. ",(0,i.jsx)("br",{}),"\r\nAll the parameters that can be passed as arguments are listed and explained below: ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("strong",{children:"Parameters:"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"path2param"})," (",(0,i.jsx)(n.em,{children:"str"}),") \u2013 required, path to the parameter file."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"paramFileName"})," (",(0,i.jsx)(n.em,{children:"str"}),") \u2013 required, name of the parameter file to be used without the extention."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"outpuDir"})," \u2013 required, path to the folder in which to write the output."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"doConvolve"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: True, if you want to use the natural convolution operation set to True."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"doPlot"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, if you want to see the result in python set this to True."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"verbose"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, If you want all messages set this to True"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"returnRes"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, The function will return the result in the environment if set to True, else it saves the result only in a .fits file."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"returnMetrics"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, The function will return Strehl Ratio, fwhm and encircled energy within eeRadiusInMas if set to True"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"addSrAndFwhm"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: True, The function will add in the header of the fits file SR anf FWHM for each PSF."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"verbose"})," \u2013 optional default: False, If you want all messages set this to True."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getHoErrorBreakDown"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, If you want HO error breakdown set this to True."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"ensquaredEnergy"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, If you want ensquared energy instead of encircled energy set this to True."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"eeRadiusInMas"})," (",(0,i.jsx)(n.em,{children:"float"}),") \u2013 optional default: 50, used together with returnMetrics, radius used for the computation of the encirlced energy (if ensquaredEnergy is selected, this is half the side of the square)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"savePSDs"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, If you want to save PSD in the output fits file set this to True."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"saveJson"})," (",(0,i.jsx)(n.em,{children:"bool"}),") \u2013 optional default: False, If you want to save the PSF profile in a json file"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"gpuIndex"})," (",(0,i.jsx)(n.em,{children:"int"}),") \u2013 optional default: 0, Target GPU index where the simulation will be run"]}),"\n"]}),"\n"]})]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);