"use strict";(self.webpackChunktiptop_site=self.webpackChunktiptop_site||[]).push([[1659],{2985:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"aquila/overview","title":"Overview","description":"\ud83c\udf0c The big picture","source":"@site/docs/aquila/overview.md","sourceDirName":"aquila","slug":"/aquila/overview","permalink":"/astro-tiptop-services/docs/aquila/overview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"overview","title":"Overview","sidebar_label":"Overview"},"sidebar":"tipTopSidebar","previous":{"title":"Parameter files explained","permalink":"/astro-tiptop-services/docs/orion/parameterfiles"},"next":{"title":"Parameter files explained","permalink":"/astro-tiptop-services/docs/aquila/parameterfiles"}}');var n=s(4848),r=s(8453);const l={id:"overview",title:"Overview",sidebar_label:"Overview"},o=void 0,a={},d=[{value:"\ud83c\udf0c The big picture",id:"-the-big-picture",level:2},{value:"\ud83e\udd14 What does it change in TipTop?",id:"-what-does-it-change-in-tiptop",level:2},{value:"\ud83d\udca1 Why is this useful?",id:"-why-is-this-useful",level:2},{value:"\ud83c\udf0c The General Idea",id:"-the-general-idea",level:2},{value:"\ud83e\udd14 What changes this brings to the <code>.ini</code> parameter files of TipTop ?",id:"-what-changes-this-brings-to-the-ini-parameter-files-of-tiptop-",level:2},{value:"Why a [ASTERISM_SELECTION] section ?",id:"why-a-asterism_selection-section-",level:2},{value:"\ud83d\udee0\ufe0f How Does It Work?",id:"\ufe0f-how-does-it-work",level:2},{value:"\ud83d\udca1Why Is This Useful?",id:"why-is-this-useful",level:2},{value:"\u2714\ufe0f In Summary",id:"\ufe0f-in-summary",level:2},{value:"asterismSelection function documentation",id:"asterismselection-function-documentation",level:2},{value:"reloadAsterismSelection function documentation",id:"reloadasterismselection-function-documentation",level:2},{value:"generateHeuristicModel function documentation",id:"generateheuristicmodel-function-documentation",level:2}];function c(e){const t={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-the-big-picture",children:"\ud83c\udf0c The big picture"}),"\n",(0,n.jsxs)(t.p,{children:["Adaptive optics needs ",(0,n.jsx)(t.strong,{children:"reference sources"})," (natural stars or laser beacons) to measure and correct atmospheric distortions. A ",(0,n.jsx)(t.strong,{children:"set of guide stars"})," used together is called an ",(0,n.jsx)(t.strong,{children:"asterism"}),". In practice, an asterism can be ",(0,n.jsx)(t.strong,{children:"1 star"})," (mono-NGS) or ",(0,n.jsx)(t.strong,{children:"3+ stars"})," (multi-NGS) observed simultaneously to drive deformable mirrors."]}),"\n",(0,n.jsx)(t.h2,{id:"-what-does-it-change-in-tiptop",children:"\ud83e\udd14 What does it change in TipTop?"}),"\n",(0,n.jsxs)(t.p,{children:["TipTop now supports exploring many guide-star configuration by adding a new section to the ini parameter files: ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"[ASTERISM_SELECTION]"})}),(0,n.jsx)("br",{}),"\r\nThis section declares:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"how"})," you provide the asterisms (the ",(0,n.jsx)(t.em,{children:"mode"}),"), and",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.li,{children:["the ",(0,n.jsx)(t.strong,{children:"data"})," required for that mode (e.g., per-star zenith/azimuth/flux, or a file with many fields)"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Compared to the \u201cclassic\u201d TipTop parameter files:",(0,n.jsx)("br",{}),"\r\n\u2192 ",(0,n.jsxs)(t.strong,{children:["Add an ",(0,n.jsx)(t.code,{children:"[ASTERISM_SELECTION]"})," block"]})," whenever you want to evaluate or rank guide-star configurations."]}),"\n",(0,n.jsx)(t.h2,{id:"-why-is-this-useful",children:"\ud83d\udca1 Why is this useful?"}),"\n",(0,n.jsx)(t.p,{children:"It lets you answer practical questions:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Performance:"})," which asterism gives the best image quality (high Strehl, low jitter, good FWHM/EE)?",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Robustness:"})," how much do we lose with a fainter or more off-axis star?",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Automation:"})," generate and test ",(0,n.jsx)(t.em,{children:"all"})," combinations from a star list or a catalog, instead of hand-picking.",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Scenario comparison:"})," e.g., one bright star near the center vs. three fainter stars spread around the field.",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"-the-general-idea",children:"\ud83c\udf0c The General Idea"}),"\n",(0,n.jsx)(t.p,{children:"In adaptive optics, we need reference sources in the sky (stars or lasers) to measure and correct the distortions caused by the atmosphere.\r\nThese groups of stars that serve as references are called asterisms."}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udc49 In practice: an asterism can be 1, 3, or several stars that are observed simultaneously to control the deformable mirrors."}),"\n",(0,n.jsxs)(t.h2,{id:"-what-changes-this-brings-to-the-ini-parameter-files-of-tiptop-",children:["\ud83e\udd14 What changes this brings to the ",(0,n.jsx)(t.code,{children:".ini"})," parameter files of TipTop ?"]}),"\n",(0,n.jsx)(t.p,{children:"In practical terms, this means that TipTop parameter files now include a new section called [ASTERISM_SELECTION].\r\nThis section defines how reference stars (asterisms) are provided to the simulation and how the software should handle them."}),"\n",(0,n.jsx)(t.p,{children:"So compared to the original TipTop parameter files: You must add an [ASTERISM_SELECTION] block whenever you want to test guide-star configurations."}),"\n",(0,n.jsx)(t.h2,{id:"why-a-asterism_selection-section-",children:"Why a [ASTERISM_SELECTION] section ?"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"If I use these three stars, does the correction work well?"}),"\n",(0,n.jsx)(t.li,{children:"If I only take one bright star, is that enough?"}),"\n",(0,n.jsx)(t.li,{children:"What happens if my field has several possible configurations?"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The [ASTERISM_SELECTION] section tells the software:"}),"\n",(0,n.jsx)(t.p,{children:"\u201cHere is how I will provide you with the reference stars, and here is how you should use them.\u201d"}),"\n",(0,n.jsx)(t.p,{children:"So compared to the original TipTop parameter files:"}),"\n",(0,n.jsx)(t.p,{children:"You must add an [ASTERISM_SELECTION] block whenever you want to test guide-star configurations."}),"\n",(0,n.jsx)(t.p,{children:"Inside this block, you specify the mode (e.g. Sets, Singles3, File, \u2026) and provide the corresponding keywords (Zenith, Azimuth, NumberPhotons, etc., or a filename if using external data)."}),"\n",(0,n.jsx)(t.p,{children:"Depending on the mode, some parameters are required, others are ignored."}),"\n",(0,n.jsx)(t.p,{children:"This gives the user much more flexibility: instead of being limited to a fixed star setup, you can now explore multiple fields, auto-generate asterisms, or load large datasets of star fields."}),"\n",(0,n.jsx)(t.h2,{id:"\ufe0f-how-does-it-work",children:"\ud83d\udee0\ufe0f How Does It Work?"}),"\n",(0,n.jsx)(t.p,{children:"There are different ways to describe the asterisms to the software (that\u2019s the mode parameter), depending on what we want to do:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Mode Sets \u2192 you directly provide the stars, already grouped (by 1 or 3).\r\nExample: \u201cUse exactly this triplet of stars.\u201d"}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Mode Singles1 or Singles3 \u2192 you give a list of stars, and the software automatically combines them into asterisms of size 1 or 3.\r\nExample: \u201cHere are all visible stars, make every possible combination of 3.\u201d"}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Mode Generate \u2192 the software generates artificial stars for testing (useful for development or quick checks)."}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Mode File / FileMono \u2192 you provide a file with many precomputed fields, each containing asterisms.\r\nExample: \u201cI have a database of 1000 star fields, run the simulation on each one.\u201d"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"why-is-this-useful",children:"\ud83d\udca1Why Is This Useful?"}),"\n",(0,n.jsx)(t.p,{children:"In short, it helps answer questions like:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Performance:\r\nWhich star combination gives the best image quality (highest Strehl ratio, lowest jitter, etc.)?"}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Robustness:\r\nIf I pick a slightly fainter or more distant star, does the performance degrade a lot?"}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Automatic exploration:\r\nInstead of manually testing every configuration, I can tell the software:\r\n\u201cTake this star catalog and generate all possible asterisms.\u201d"}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Scenario comparison:\r\nCompare different strategies (e.g. one bright central star vs. three fainter stars spread around the field)."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"\ufe0f-in-summary",children:"\u2714\ufe0f In Summary"}),"\n",(0,n.jsx)(t.p,{children:"[ASTERISM_SELECTION] = a recipe that tells the software which stars to use and how to combine them."}),"\n",(0,n.jsx)(t.p,{children:"The goal = explore and choose the best star configurations to guide adaptive optics."}),"\n",(0,n.jsx)(t.p,{children:"Why it matters = in real observations, you don\u2019t always have the perfect asterism available \u2192 you need to know what works and how far you can push the system with the stars you\u2019ve got."}),"\n",(0,n.jsx)(t.h2,{id:"asterismselection-function-documentation",children:"asterismSelection function documentation"}),"\n",(0,n.jsxs)(t.p,{children:["tiptop.asterismSelection runs a full asterism evaluation with TIPTOP based on the ",(0,n.jsx)(t.code,{children:"[ASTERISM_SELECTION]"})," section of the INI. It builds the list of candidate asterisms (from lists, generated data, or a .npy recarray), runs the AO simulations for each asterism, computes image-quality metrics, and returns/saves the results."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"sr, fw, ee, covs, simul = asterismSelection(simulName, path2param, parametersFile, outputDir, outputFile, doPlot=False, \r\n                                            returnRes=False, returnMetrics=True, addSrAndFwhm=True, verbose=False,\r\n                                            getHoErrorBreakDown=False, ensquaredEnergy=False, eeRadiusInMas=50, \r\n                                            doConvolve=False, plotInComputeAsterisms=False, progressStatus=False, gpuIndex=0):\n"})}),"\n",(0,n.jsx)(t.p,{children:"All the parameters that can be passed as arguments are listed and explained below:"}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:(0,n.jsx)("strong",{children:" Parameters "})}),(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"simulName"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"str"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Short name used as prefix when saving arrays (e.g. ",(0,n.jsx)(t.code,{children:"simulName+'sr.npy'"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"path2param"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"str"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Path to the parameter file."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"parametersFile"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"str"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Name of the parameter file to be used without the extention."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"outputDir"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"str"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Path to the folder in which to write the output."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"outputFile"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"str"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Base FITS filename if results are saved as images elsewhere in the pipeline."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"doPlot"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If you want to see the result in python set this to ",(0,n.jsx)(t.code,{children:"True"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"returnRes"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If ",(0,n.jsx)(t.code,{children:"True"}),", return (HO, LO) residuals per asterism and the simulation object."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"returnMetrics"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"True"}),", The function will return Strehl Ratio, fwhm, encircled energy within eeRadiusInMas, covariance ellipses and the simulation object, if set to ",(0,n.jsx)(t.code,{children:"True"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"addSrAndFwhm"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"True"}),", The function will add in the header of the fits file SR anf FWHM for each PSF."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"verbose"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If you want all messages set this to ",(0,n.jsx)(t.code,{children:"True"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getHoErrorBreakDown"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If you want HO error breakdown set this to ",(0,n.jsx)(t.code,{children:"True"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"ensquaredEnergy"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"float"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If you want ensquared energy instead of encircled energy set this to ",(0,n.jsx)(t.code,{children:"True"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"eeRadiusInMas"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": 50, Used together with ",(0,n.jsx)(t.code,{children:"returnMetrics"}),", radius used for the computation of the encirlced energy."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"doConvolve"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If you want to use the natural convolution operation set to True."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"plotInComputeAsterisms"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If you want to display asterisms."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"progressStatus"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"bool"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": ",(0,n.jsx)(t.code,{children:"False"}),", If you want to display progress status."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"gpuIndex"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"integer"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"optional"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.em,{children:"Default"}),": 0, Target GPU index where the simulation will be run."]})]})]})]})]}),"\n",(0,n.jsx)(t.p,{children:"\u26a0\ufe0f Prerequisites: Your .ini file must contain a valid [ASTERISM_SELECTION] section and the LO loop must be on (valid [sensor_LO] section) or the function returns None."}),"\n",(0,n.jsx)(t.h2,{id:"reloadasterismselection-function-documentation",children:"reloadAsterismSelection function documentation"}),"\n",(0,n.jsx)(t.p,{children:"tiptop.reloadAsterismSelection reloads previously saved asterism-evaluation arrays without recomputing the simulations (useful for fast post-processing, GUIs, or web dashboards)."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"sr, fw, ee, covs, simul = reloadAsterismSelection(simulName, path2param, parametersFile, outputDir, outputFile,\r\n                                                  doPlot=False, returnRes=False, returnMetrics=True, addSrAndFwhm=True,\r\n                                                  verbose=False, getHoErrorBreakDown=False, ensquaredEnergy=False,\r\n                                                  eeRadiusInMas=50, gpuIndex=0)\n"})}),"\n",(0,n.jsxs)(t.p,{children:["\u270f\ufe0f ",(0,n.jsx)(t.strong,{children:"Note"}),": The signature mirrors ",(0,n.jsx)(t.code,{children:"asterismSelection"})," for convenience, but only ",(0,n.jsx)(t.code,{children:"simulName"}),", ",(0,n.jsx)(t.code,{children:"path2param"}),", ",(0,n.jsx)(t.code,{children:"parametersFile"}),", and ",(0,n.jsx)(t.code,{children:"outputDir"})," matter for reloading."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"What it loads ?"})}),"\n",(0,n.jsxs)(t.p,{children:["From ",(0,n.jsx)(t.code,{children:"outputDir"}),", using the same ",(0,n.jsx)(t.code,{children:"simulName"})," prefix: ",(0,n.jsx)(t.code,{children:"fw.npy"}),", ",(0,n.jsx)(t.code,{children:"ee.npy"}),", ",(0,n.jsx)(t.code,{children:"covs.npy"}),", ",(0,n.jsx)(t.code,{children:"sr.npy"}),", ",(0,n.jsx)(t.code,{children:"penalty.npy"}),". ",(0,n.jsx)("br",{}),"\r\nThe helper returns the first four along with the simulation object, which has those arrays attached."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"What it returns ?"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"strehl_Asterism, fwhm_Asterism, ee_Asterism, cov_ellipses_Asterism, simulation\n"})}),"\n",(0,n.jsx)(t.h2,{id:"generateheuristicmodel-function-documentation",children:"generateHeuristicModel function documentation"}),"\n",(0,n.jsx)(t.p,{children:"tiptop.generateHeuristicModel trains (and optionally test) a heuristic model that predicts asterism quality quickly\u2014so you can rank asterisms without running the full AO simulation each time. It orchestrates a full asterism run (if needed), trains the model on a fraction of the fields, and (optionally) evaluates on the remainder."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"generateHeuristicModel(simulName, path2param, parametersFile, outputDir, outputFile,\r\n                       doPlot=False, doTest=True, share=0.9, eeRadiusInMas=50, gpuIndex=0)\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"What it does (step-by-step)"})}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Ensure data exists, calls: ",(0,n.jsx)(t.code,{children:"asterismSelection"})," to make sure all per-asterism arrays are computed and loaded."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Train the heuristic model, calls:"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"simul.fitHeuristicModel(0, int(share*simul.nfields), modelName=parametersFile.split('.')[0] + '_hmodel') \r\n\n"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Mono (Singles1): fits SmoothBivariateSplines in flux\u2013radius space for different LO frame-rate regimes; saves to ",(0,n.jsx)(t.code,{children:"outputDir/<base>_hmodel.npy"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Multi (triplets): trains a neural network (default geometry [128]*8, 500 epochs, lr steps [1e-4]), typically saved as ",(0,n.jsx)(t.code,{children:"outputDir/<base>_hmodel.pth"})," (the training routine handles the actual save)."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.ol,{start:"3",children:["\n",(0,n.jsxs)(t.li,{children:["(Optional) Test the model, if ",(0,n.jsx)(t.code,{children:"doTest=True"}),", runs:"]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"simul.testHeuristicModel(int(share*simul.nfields), simul.nfields-1, modelName, [])\n"})}),"\n",(0,n.jsx)(t.p,{children:"which evaluates a previously trained heuristic model (mono: spline model, multi: neural net) against a hold-out set of fields/asterisms. It reports error statistics, checks how well the ranking of asterisms is preserved, and (optionally) plots diagnostics."}),"\n",(0,n.jsxs)(t.ol,{start:"4",children:["\n",(0,n.jsxs)(t.li,{children:["Returns ",(0,n.jsx)(t.code,{children:"simul"}),"\r\nThe asterismSimulation instance, now containing training/test context and ready for runHeuristicModel() or further analysis."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>o});var i=s(6540);const n={},r=i.createContext(n);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);