"use strict";(self.webpackChunktiptop_site=self.webpackChunktiptop_site||[]).push([[451],{4078:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"aquila/heuristic_models","title":"Heuristic models (train, test, run)","description":"Heuristic models let you train once on simulated data and then predict asterism quality in milliseconds.","source":"@site/docs/aquila/heuristic_models.md","sourceDirName":"aquila","slug":"/aquila/heuristic_models","permalink":"/astro-tiptop-services/docs/aquila/heuristic_models","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"heuristic_models","title":"Heuristic models (train, test, run)","sidebar_label":"Heuristic models"},"sidebar":"tipTopSidebar","previous":{"title":"Running selections","permalink":"/astro-tiptop-services/docs/aquila/running_selection"},"next":{"title":"Tutorial - Asterism Selection","permalink":"/astro-tiptop-services/docs/aquila/tuto_ast_select"}}');var t=n(4848),r=n(8453);const l={id:"heuristic_models",title:"Heuristic models (train, test, run)",sidebar_label:"Heuristic models"},o=void 0,a={},d=[{value:"Quick start",id:"quick-start",level:2},{value:"\u2699\ufe0f\u200b Train",id:"\ufe0f-train",level:2},{value:"\ud83d\udd0e Test",id:"-test",level:2},{value:"\u25b6\ufe0f Run",id:"\ufe0f-run",level:2}];function c(e){const i={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Heuristic models"})," let you train once on simulated data and then ",(0,t.jsx)(i.strong,{children:"predict asterism quality in milliseconds"}),"."]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Mono-NGS"}),": smooth splines fitted on distance/flux (with frequency bins)."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Multi-NGS"}),": a small neural network."]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["The model predicts a ",(0,t.jsx)(i.strong,{children:"jitter/penalty"})," score and derives ",(0,t.jsx)(i.strong,{children:"Strehl, FWHM,"})," and ",(0,t.jsx)(i.strong,{children:"EE"}),". Lower penalty = better asterism."]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"quick-start",children:"Quick start"}),"\n",(0,t.jsx)(i.h2,{id:"\ufe0f-train",children:"\u2699\ufe0f\u200b Train"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"from tiptop import generateHeuristicModel\r\nsimul = generateHeuristicModel(simulName, path2param,        \r\n                               parametersFile,\r\n                               outputDir, outputFile, doPlot=False, doTest=True)\n"})}),"\n",(0,t.jsx)(i.p,{children:"What this does:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Runs asterism evaluation if needed (or reloads it if already computed)."}),"\n",(0,t.jsxs)(i.li,{children:["Trains a model:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["mono: 3 ",(0,t.jsx)(i.code,{children:"SmoothBivariateSpline"})," (frequency buckets) + static terms"]}),"\n",(0,t.jsx)(i.li,{children:"multi: PyTorch MLP"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Saves the model to disk in ",(0,t.jsx)(i.code,{children:"outputDir"}),":","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Mono: ",(0,t.jsx)(i.code,{children:"<parametersFile without .ini>_hmodel.npy"})]}),"\n",(0,t.jsxs)(i.li,{children:["Multi: ",(0,t.jsx)(i.code,{children:"<parametersFile without .ini>_hmodel.pth"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"-test",children:"\ud83d\udd0e Test"}),"\n",(0,t.jsxs)(i.p,{children:["If ",(0,t.jsx)(i.code,{children:"doTest=True"}),", a hold-out split is used. ",(0,t.jsx)(i.strong,{children:"TipTop"})," prints:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"mean/median absolute and relative errors,"}),"\n",(0,t.jsx)(i.li,{children:"RMS error,"}),"\n",(0,t.jsx)(i.li,{children:"how often the model\u2019s ranking matches the AO ranking (where separations are significant)."}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"You can also call the low-level tester yourself (see below)."}),"\n",(0,t.jsx)(i.h2,{id:"\ufe0f-run",children:"\u25b6\ufe0f Run"}),"\n",(0,t.jsx)(i.p,{children:"Once trained, you can call the model to rank new asterisms instantly, without full AO simulations."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"results = simul.runHeuristicModel()\r\n# `results` is a list of AsterismProperties, already sorted by predicted jitter asc:\r\n# [AsterismProperties(index=..., asterism=[...], jitter=..., strehl=..., fwhm=..., encircled_energy=...), ...]\n"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Tip"}),": If you want the model to auto-load on construction, put this in your ",(0,t.jsx)(i.code,{children:".ini"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"[ASTERISM_SELECTION]\r\nheuristicModel = mycase_hmodel   ; basename (no extension); looked up in outputDir\n"})}),"\n",(0,t.jsxs)(i.p,{children:["For mono, TIPTOP loads ",(0,t.jsx)(i.code,{children:"outputDir/mycase_hmodel.npy"}),".\r\nFor multi, use the ",(0,t.jsx)(i.code,{children:".pth"})," equivalent."]}),"\n",(0,t.jsx)(i.hr,{})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var s=n(6540);const t={},r=s.createContext(t);function l(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);